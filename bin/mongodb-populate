#!/usr/bin/env node

// jshint esversion: 6
// jshint asi: true

//
// Usage:
//
// $ mongodb-populate --uri mongodb://localhost/db1 --clear collection1,collection2 import/collection1.js import/collection2.js
//

var path = require('path')
var argv = require('minimist')(process.argv.slice(2))
var mongodb = require('mongodb')

global.ObjectId = mongodb.ObjectID.createFromHexString
global.NumberLong = mongodb.Long.fromString
global.ISODate = (d) => new Date(d)

const getConnection = () => mongodb.MongoClient.connect(argv.uri)

const argClears = () => argv.clear ? argv.clear.split(',') : []
const argInserts = () => argv._

const clears = (db) => {
  return Promise.all(argClears().map((c) => {
    return db.collection(c).dropIndexes().catch((e) => {
      if (e.errmsg === 'ns not found') {
        return
      } else {
        throw e
      }
    }).then(() => db.collection(c).deleteMany({}))
  }))
}

const inserts = (db) => {
  return Promise.all(argInserts().map((c) => {
    const res = require(path.resolve(c))
    const bulk = db.collection(res.name).initializeUnorderedBulkOp()
    res.data.forEach((d) => {
      bulk.insert(d)
    })
    return bulk.execute()
  }))
}

getConnection().then((db) => {
  return clears(db).then(() => inserts(db)).then(() => db.close())
})
